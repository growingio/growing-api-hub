worker_processes  auto;
worker_cpu_affinity auto;

worker_rlimit_nofile 65535;

error_log logs/error.log error;

events {
    worker_connections 65535;
    multi_accept on;
    accept_mutex off;
}

http {
    log_not_found off;
    keepalive_timeout 75s;
    client_max_body_size 4m;
    client_body_buffer_size 4m;
    lua_package_path "lib/lua-resty-http/lib/?.lua;conf/?.lua;lua/?.lua;;";
    init_by_lua_block {
        env = require("env")
        fork = require("fork").new({hosts = env.hosts})
    }

    include upstreams.conf;

    server {
        listen 80;
        include https.conf;

        location / {
            proxy_pass http://growing;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            access_by_lua_block {
                if env.fork_enabled then
                    fork:exec()
                end
            }
        }

        location = /favicon.ico {
            access_log off;
        }

    }

}
